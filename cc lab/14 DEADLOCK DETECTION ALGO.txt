________________________________________
14. Deadlock Detection Algorithm
This program detects if a system is in a deadlock state.
c
Copy code
#include <stdio.h>

int main() {
    int n, m;
    printf("Enter number of processes: ");
    scanf("%d", &n);
    printf("Enter number of resources: ");
    scanf("%d", &m);

    int alloc[n][m], request[n][m], avail[m], finish[n];
    printf("Enter allocation matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < m; j++) {
            scanf("%d", &alloc[i][j]);
        }
        finish[i] = 0;
    }

    printf("Enter request matrix:\n");
    for (int i = 0; i < n; i++)
        for (int j = 0; j < m; j++)
            scanf("%d", &request[i][j]);

    printf("Enter available resources:\n");
    for (int j = 0; j < m; j++)
        scanf("%d", &avail[j]);

    for (int k = 0; k < n; k++) {
        for (int i = 0; i < n; i++) {
            if (finish[i] == 0) {
                int flag = 0;
                for (int j = 0; j < m; j++) {
                    if (request[i][j] > avail[j]) {
                        flag = 1;
                        break;
                    }
                }
                if (flag == 0) {
                    for (int y = 0; y < m; y++)
                        avail[y] += alloc[i][y];
                    finish[i] = 1;
                }
            }
        }
    }

    int deadlock = 0;
    for (int i = 0; i < n; i++) {
        if (!finish[i]) {
            deadlock = 1;
            printf("System is in a deadlock state.\n");
            break;
        }
    }

    if (!deadlock) {
        printf("System is not in a deadlock state.\n");
    }

    return 0;
}
