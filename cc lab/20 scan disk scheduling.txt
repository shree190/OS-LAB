20. SCAN Disk Scheduling
This program calculates total seek time for SCAN disk scheduling.
c
Copy code
#include <stdio.h>
#include <stdlib.h>

void sort(int arr[], int n) {
    for (int i = 0; i < n - 1; i++)
        for (int j = 0; j < n - i - 1; j++)
            if (arr[j] > arr[j + 1]) {
                int temp = arr[j];
                arr[j] = arr[j + 1];
                arr[j + 1] = temp;
            }
}

int main() {
    int n, head, disk_size, direction;
    printf("Enter number of requests: ");
    scanf("%d", &n);

    int requests[n + 1];
    printf("Enter disk requests:\n");
    for (int i = 0; i < n; i++)
        scanf("%d", &requests[i]);

    printf("Enter initial head position: ");
    scanf("%d", &head);

    printf("Enter disk size: ");
    scanf("%d", &disk_size);

    printf("Enter direction (0 for left, 1 for right): ");
    scanf("%d", &direction);

    requests[n] = head;
    n++;
    sort(requests, n);

    int index = 0;
    for (int i = 0; i < n; i++) {
        if (requests[i] == head) {
            index = i;
            break;
        }
    }

    int total_seek_time = 0;
    if (direction == 1) {
        for (int i = index; i < n - 1; i++)
            total_seek_time += requests[i + 1] - requests[i];
        total_seek_time += disk_size - 1 - requests[n - 1];
        for (int i = index - 1; i >= 0; i--)
            total_seek_time += requests[i + 1] - requests[i];
    } else {
        for (int i = index; i > 0; i--)
            total_seek_time += requests[i] - requests[i - 1];
        total_seek_time += requests[0];
        for (int i = index + 1; i < n; i++)
            total_seek_time += requests[i] - requests[i - 1];
    }

    printf("Total seek time: %d\n", total_seek_time);
    return 0;
}
